// <auto-generated />
using Hospital;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20221012020419_cuarta1")]
    partial class cuarta1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hospital.Entidades.Consulta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("Hospital.Entidades.Medico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConsultaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Hospital.Entidades.Paciente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Hospital.Entidades.Seguimientos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConsultaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaConsultaInicial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaConsultaProxima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PrimeraVez")
                        .HasColumnType("bit");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("Hospital.Entidades.Medico", b =>
                {
                    b.HasOne("Hospital.Entidades.Consulta", null)
                        .WithMany("Medicos")
                        .HasForeignKey("ConsultaId");
                });

            modelBuilder.Entity("Hospital.Entidades.Seguimientos", b =>
                {
                    b.HasOne("Hospital.Entidades.Consulta", null)
                        .WithMany("Seguimientos")
                        .HasForeignKey("ConsultaId");

                    b.HasOne("Hospital.Entidades.Paciente", null)
                        .WithMany("Seguimientos")
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta", b =>
                {
                    b.Navigation("Medicos");

                    b.Navigation("Seguimientos");
                });

            modelBuilder.Entity("Hospital.Entidades.Paciente", b =>
                {
                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
