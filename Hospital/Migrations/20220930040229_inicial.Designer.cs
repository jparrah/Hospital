// <auto-generated />
using System;
using Hospital;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20220930040229_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ConsultaPaciente", b =>
                {
                    b.Property<int>("consultasId")
                        .HasColumnType("int");

                    b.Property<int>("pacientesId")
                        .HasColumnType("int");

                    b.HasKey("consultasId", "pacientesId");

                    b.HasIndex("pacientesId");

                    b.ToTable("ConsultaPaciente");
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("HospitallId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Medico")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HospitallId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta_Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCitaInicial")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCitaProxima")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("Id_Paciente")
                        .HasColumnType("int");

                    b.Property<bool>("Inicial")
                        .HasColumnType("bit");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.ToTable("ConsultaPacientes");
                });

            modelBuilder.Entity("Hospital.Entidades.Hospitall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("Hospital.Entidades.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("HospitallId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HospitallId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Hospital.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("ConsultaPaciente", b =>
                {
                    b.HasOne("Hospital.Entidades.Consulta", null)
                        .WithMany()
                        .HasForeignKey("consultasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Entidades.Paciente", null)
                        .WithMany()
                        .HasForeignKey("pacientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta", b =>
                {
                    b.HasOne("Hospital.Entidades.Hospitall", null)
                        .WithMany("consultas")
                        .HasForeignKey("HospitallId");
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta_Paciente", b =>
                {
                    b.HasOne("Hospital.Entidades.Consulta", null)
                        .WithMany("consultaPacientes")
                        .HasForeignKey("ConsultaId");
                });

            modelBuilder.Entity("Hospital.Entidades.Medico", b =>
                {
                    b.HasOne("Hospital.Entidades.Hospitall", null)
                        .WithMany("medicos")
                        .HasForeignKey("HospitallId");
                });

            modelBuilder.Entity("Hospital.Entidades.Consulta", b =>
                {
                    b.Navigation("consultaPacientes");
                });

            modelBuilder.Entity("Hospital.Entidades.Hospitall", b =>
                {
                    b.Navigation("consultas");

                    b.Navigation("medicos");
                });
#pragma warning restore 612, 618
        }
    }
}
